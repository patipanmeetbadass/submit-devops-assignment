apiVersion: v1
data:
  LOG_LEVEL: info
kind: ConfigMap
metadata:
  name: app-config-hf678c7m2b
---
apiVersion: v1
kind: Service
metadata:
  name: testapp
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: testapp
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: testapp
  template:
    metadata:
      labels:
        app: testapp
    spec:
      containers:
      - env:
        - name: LAST_UPDATE
          value: CURRENT_TIMESTAMP
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: LOG_LEVEL
              name: app-config-hf678c7m2b
        image: gcr.io/projectNameProd/testapp:prod.1
        imagePullPolicy: Always
        name: testapp
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsUser: 1000
      strategy:
        rollingUpdate:
          maxSurge: 50%
          maxUnavailable: 50%
        type: RollingUpdate
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: testapp
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: testapp
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-specific-ingress
spec:
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
  ingress:
  - from:
    - ipBlock:
        cidr: 10.0.0.0/8
  podSelector:
    matchLabels:
      app: testapp
  policyTypes:
  - Ingress
  - Egress
